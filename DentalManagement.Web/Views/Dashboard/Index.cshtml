@model DentalManagement.DomainModels.DashboardStatistics

@{
    ViewBag.Title = "Thống kê";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="row">
    <!-- Date Filter -->
  

    <!-- Other columns for charts -->
    <div class="col-md-6">
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Danh sách lịch hẹn</h3>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="appointmentsChart" style="height:230px; width:100%;"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title">Doanh thu</h5>
               
            </div>
            <div class="box-body">
                <div class="form-control col-md-2 text-right">Tổng số hoá đơn : @Model.TotalInvoices</div>
                <div class="form-control  col-sm-2 text-right">Tổng doanh thu : @Model.TotalRevenue</div>
                <div class="chart">
                    <canvas id="monthlyRevenueChart" style="height:230px;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .form-control{
        width:50%
    }
</style>
<script>
    $(function () {
        // Lấy dữ liệu từ model truyền vào view
        var completedAppointments = @Model.CompletedAppointments;
        var canceledAppointments = @Model.CanceledAppointments;
        var serviceLabels = @Html.Raw(Json.Serialize(Model.ServiceStatistics.Select(s => s.ServiceName).ToArray()));
        var appointmentCounts = @Html.Raw(Json.Serialize(Model.ServiceStatistics.Select(s => s.AppointmentCount).ToArray()));
        var monthlyRevenueLabels = @Html.Raw(Json.Serialize(Model.MonthlyRevenues.Select(m => m.Month).ToArray()));
        var monthlyRevenueData = @Html.Raw(Json.Serialize(Model.MonthlyRevenues.Select(m => m.Revenue).ToArray()));
        var bookingAppointments = @Model.BookingAppointments;

        // Set Total Revenue and Invoices
        $('#totalRevenue').text(@Model.TotalRevenue);
        $('#totalInvoices').text(@Model.TotalInvoices);

        // Appointment Status Bar Chart
        var appointmentData = {
            labels: ['Completed', 'Canceled','Booking'],
            datasets: [{
                label: 'Lịch hẹn',
                backgroundColor: ['#00a65a', '#f56954', '#00BFFF'],
                data: [completedAppointments, canceledAppointments,bookingAppointments]
            }]
        };

        var barOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: true },
                tooltip: { enabled: true }
            },
            scales: {
                x: { beginAtZero: true },
                y: { beginAtZero: true }
            }
        };

        // Create the Bar Chart for Appointment Status
        var appointmentChartCanvas = $('#appointmentsChart').get(0).getContext('2d');
        new Chart(appointmentChartCanvas, {
            type: 'bar',
            data: appointmentData,
            options: barOptions
        });

        // Monthly Revenue Bar Chart (Cột)
        var revenueData = {
            labels: monthlyRevenueLabels,
            datasets: [{
                label: 'Monthly Revenue (Paid Invoices)',
                backgroundColor: '#00c0ef',
                data: monthlyRevenueData,
            }]
        };

        var revenueOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: true },
                tooltip: { enabled: true }
            },
            scales: {
                x: {
                    beginAtZero: true,
                    title: { display: true, text: 'Month/Year' }
                },
                y: {
                    beginAtZero: true,
                    title: { display: true, text: 'Revenue' }
                }
            }
        };

        // Create the Bar Chart for Monthly Revenue
        var revenueChartCanvas = $('#monthlyRevenueChart').get(0).getContext('2d');
        new Chart(revenueChartCanvas, {
            type: 'bar',
            data: revenueData,
            options: revenueOptions
        });

        // Filter Button Click Event
        $('#filterBtn').on('click', function () {
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();

            // Call to controller with startDate and endDate
            $.ajax({
                url: '@Url.Action("GetDashboardStatistics", "Dashboard")',
                type: 'GET',
                data: { startDate: startDate, endDate: endDate },
                success: function (data) {
                    // Cập nhật lại dữ liệu trong biểu đồ và tổng doanh thu
                    $('#totalRevenue').text(data.TotalRevenue);
                    $('#totalInvoices').text(data.TotalInvoices);

                    // Cập nhật biểu đồ doanh thu theo tháng
                    var newRevenueData = {
                        labels: data.MonthlyRevenues.map(m => m.Month),
                        datasets: [{
                            label: 'Monthly Revenue (Paid Invoices)',
                            backgroundColor: '#00c0ef',
                            data: data.MonthlyRevenues.map(m => m.Revenue),
                        }]
                    };

                    var newInvoiceCountData = {
                        labels: data.MonthlyRevenues.map(m => m.Month),
                        datasets: [{
                            label: 'Invoice Count',
                            backgroundColor: '#f39c12',
                            data: data.MonthlyRevenues.map(m => m.InvoiceCount),
                        }]
                    };

                    // Cập nhật lại biểu đồ
                    revenueChartCanvas.chart.data = newRevenueData;
                    revenueChartCanvas.chart.update();

                    // Cập nhật biểu đồ số lượng hóa đơn
                    invoiceCountChartCanvas.chart.data = newInvoiceCountData;
                    invoiceCountChartCanvas.chart.update();
                }
            });
        });
    });
</script>
